import RazorpayCheckout from 'react-native-razorpay';
<TouchableHighlight onPress={() => {
    var options = {
    description: 'Credits towards consultation',
    image: 'https://i.imgur.com/3g7nmJC.jpg',
    currency: 'INR',
    key: '<YOUR_KEY_ID>',
    amount: '5000',
    name: 'Acme Corp',
    order_id: 'order_DslnoIgkIDL8Zt',//Replace this with an order_id created using Orders API.
    prefill: {
      email: 'gaurav.kumar@example.com',
      contact: '9191919191',
      name: 'Gaurav Kumar'
    },
    theme: {color: '#53a20e'}
  }
  RazorpayCheckout.open(options).then((data) => {
    // handle success
    alert(`Success: ${data.razorpay_payment_id}`);
  }).catch((error) => {
    // handle failure
    alert(`Error: ${error.code} | ${error.description}`);
  });
}}>


//code -> https://razorpay.com/docs/payments/payment-gateway/react-native-integration/standard/build-integration-android/


//firebase messaging:

//onmessage events:

// React Native
import notifee from '@notifee/react-native';
import messaging from '@react-native-firebase/messaging';

function onMessageReceived(message) {
  notifee.displayNotification(JSON.parse(message.data.notifee));
}

messaging().onMessage(onMessageReceived);
messaging().setBackgroundMessageHandler(onMessageReceived);


//register device :>

import messaging from '@react-native-firebase/messaging';

async function onAppBootstrap() {
  // Register the device with FCM
  await messaging().registerDeviceForRemoteMessages();

  // Get the token
  const token = await messaging().getToken();

  // Save the token
  await postToApi('/users/1234/tokens', { token });
}


{******  // Required for iOS
  // See https://notifee.app/react-native/docs/ios/permissions
  await notifee.requestPermission();
  *****}

//sites -> [https://rnfirebase.io/messaging/notifications, https://notifee.app/react-native/docs/integrations/fcm]


//@react-native-firebase/messaging:

import messaging from '@react-native-firebase/messaging';

async function requestUserPermission() {
  const authStatus = await messaging().requestPermission();
  const enabled =
    authStatus === messaging.AuthorizationStatus.AUTHORIZED ||
    authStatus === messaging.AuthorizationStatus.PROVISIONAL;

  if (enabled) {
    console.log('Authorization status:', authStatus);
  }
}


[
  {
  "relation": ["delegate_permission/common.handle_all_urls"],
  "target": {
    "namespace": "android_app",
    "package_name": "com.brainbucks.android",
    "sha256_cert_fingerprints": ["SHA256: 36:A0:DF:D6:9B:AF:76:A1:DF:0F:DC:9C:3A:0D:D0:45:FB:DE:DF:25:06:BD:F3:DC:61:22:B3:AE:D5:14:AF:D7"]
  }
}]

todos:
1. Reels:
  * Tags UI
  * Sharing
2. Deep Linking
3. Deposit in Wallet
4. Auto Refresh In Home
5. Remove Quiz Join logic from frontend
6. Custom Notification Sound